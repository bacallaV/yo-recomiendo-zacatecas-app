{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Directive, Input, Output, Self, Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { from, of, animationFrameScheduler, Subject, BehaviorSubject, defer, Observable } from 'rxjs';\nimport { map, tap, shareReplay, observeOn, filter, switchMap, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\nimport { makeStateKey } from '@angular/platform-browser';\nconst _c0 = [\"container\"];\nconst LOTTIE_OPTIONS = new InjectionToken('LottieOptions');\nfunction convertPlayerOrLoaderToObservable(player, useWebWorker) {\n  const playerOrLoader = player();\n  const player$ = playerOrLoader instanceof Promise ? from(playerOrLoader).pipe(map(module => module.default || module)) : of(playerOrLoader);\n  return player$.pipe(tap(player => player.useWebWorker(useWebWorker)), shareReplay({\n    bufferSize: 1,\n    refCount: true\n  }));\n}\nclass AnimationLoader {\n  constructor(ngZone, options) {\n    this.ngZone = ngZone;\n    this.options = options;\n    this.player$ = convertPlayerOrLoaderToObservable(this.options.player, this.options.useWebWorker).pipe(observeOn(animationFrameScheduler));\n  }\n  loadAnimation(options) {\n    return this.player$.pipe(map(player => this.createAnimationItem(player, options)));\n  }\n  resolveOptions(options, container) {\n    return Object.assign({\n      container,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true\n    }, options);\n  }\n  createAnimationItem(player, options) {\n    return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));\n  }\n}\n/** @nocollapse */\nAnimationLoader.ɵfac = function AnimationLoader_Factory(t) {\n  return new (t || AnimationLoader)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(LOTTIE_OPTIONS));\n};\n/** @nocollapse */\nAnimationLoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AnimationLoader,\n  factory: AnimationLoader.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimationLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOTTIE_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\nclass BaseDirective {\n  constructor(ngZone, platformId, animationLoader) {\n    this.ngZone = ngZone;\n    this.platformId = platformId;\n    this.animationLoader = animationLoader;\n    this.options = null;\n    this.containerClass = null;\n    this.styles = null;\n    /**\n     * `animationCreated` is dispatched after calling `loadAnimation`.\n     */\n    this.animationCreated = this.getAnimationItem();\n    /**\n     * `complete` is dispatched after completing the last frame.\n     */\n    this.complete = this.awaitAnimationItemAndStartListening('complete');\n    /**\n     * `loopComplete` is dispatched after completing the frame loop.\n     */\n    this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');\n    /**\n     * `enterFrame` is dispatched after entering the new frame.\n     */\n    this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');\n    /**\n     * `segmentStart` is dispatched when the new segment is adjusted.\n     */\n    this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');\n    /**\n     * Original event name is `config_ready`. `config_ready` is dispatched\n     * after the needed renderer is configured.\n     */\n    this.configReady = this.awaitAnimationItemAndStartListening('config_ready');\n    /**\n     * Original event name is `data_ready`. `data_ready` is dispatched\n     * when all parts of the animation have been loaded.\n     */\n    this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');\n    /**\n     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n     * when elements have been added to the DOM.\n     */\n    this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');\n    /**\n     * `destroy` will be dispatched when the component gets destroyed,\n     * it's handy for releasing resources.\n     */\n    this.destroy = this.awaitAnimationItemAndStartListening('destroy');\n    /**\n     * `error` will be dispatched if the Lottie player could not render\n     * some frame or parse config.\n     */\n    this.error = this.awaitAnimationItemAndStartListening('error');\n    this.destroy$ = new Subject();\n    this.loadAnimation$ = new Subject();\n    this.animationItem$ = new BehaviorSubject(null);\n    this.setupLoadAnimationListener();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroyAnimation();\n  }\n  loadAnimation(changes, container) {\n    // The `loadAnimation` may load `lottie-web` asynchronously and also pipes the player\n    // with `animationFrameScheduler`, which schedules an animation task and triggers change\n    // detection. We'll trigger change detection only once when the animation item is created.\n    this.ngZone.runOutsideAngular(() => this.loadAnimation$.next([changes, container]));\n  }\n  getAnimationItem() {\n    return defer(() => this.animationItem$).pipe(filter(animationItem => animationItem !== null));\n  }\n  awaitAnimationItemAndStartListening(name) {\n    return this.getAnimationItem().pipe(switchMap(animationItem =>\n    // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.\n    // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from\n    // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`\n    // removes event listeners when calling `destroy()`.\n    new Observable(observer => {\n      this.ngZone.runOutsideAngular(() => {\n        animationItem.addEventListener(name, event => {\n          this.ngZone.runOutsideAngular(() => {\n            observer.next(event);\n          });\n        });\n      });\n    })));\n  }\n  setupLoadAnimationListener() {\n    const loadAnimation$ = this.loadAnimation$.pipe(filter(([changes]) => isPlatformBrowser(this.platformId) && changes.options !== undefined));\n    loadAnimation$.pipe(switchMap(([changes, container]) => {\n      this.destroyAnimation();\n      return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));\n    }), takeUntil(this.destroy$)).subscribe(animationItem => {\n      this.ngZone.run(() => this.animationItem$.next(animationItem));\n    });\n  }\n  destroyAnimation() {\n    const animationItem = this.animationItem$.getValue();\n    // The `ng-lottie` component or the `lottie` directive can be destroyed\n    // before the `animationItem` is set, thus it will fail with\n    // `Cannot read property 'destroy' of null`.\n    // Potentially it can happen if the directive gets destroyed before change\n    // detection is run.\n    if (animationItem === null) {\n      return;\n    }\n    // `destroy()` will remove all events listeners.\n    animationItem.destroy();\n    this.animationItem$.next(null);\n  }\n}\n/** @nocollapse */\nBaseDirective.ɵfac = function BaseDirective_Factory(t) {\n  return new (t || BaseDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(AnimationLoader));\n};\n/** @nocollapse */\nBaseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BaseDirective,\n  selectors: [[\"\", \"lottie\", \"\"]],\n  inputs: {\n    options: \"options\",\n    containerClass: \"containerClass\",\n    styles: \"styles\"\n  },\n  outputs: {\n    animationCreated: \"animationCreated\",\n    complete: \"complete\",\n    loopComplete: \"loopComplete\",\n    enterFrame: \"enterFrame\",\n    segmentStart: \"segmentStart\",\n    configReady: \"configReady\",\n    dataReady: \"dataReady\",\n    domLoaded: \"domLoaded\",\n    destroy: \"destroy\",\n    error: \"error\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lottie]'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: AnimationLoader\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    animationCreated: [{\n      type: Output\n    }],\n    complete: [{\n      type: Output\n    }],\n    loopComplete: [{\n      type: Output\n    }],\n    enterFrame: [{\n      type: Output\n    }],\n    segmentStart: [{\n      type: Output\n    }],\n    configReady: [{\n      type: Output\n    }],\n    dataReady: [{\n      type: Output\n    }],\n    domLoaded: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }]\n  });\n})();\nclass LottieDirective extends BaseDirective {\n  constructor(ngZone, platformId, host, animationLoader) {\n    super(ngZone, platformId, animationLoader);\n    this.host = host;\n  }\n  ngOnChanges(changes) {\n    super.loadAnimation(changes, this.host.nativeElement);\n  }\n}\n/** @nocollapse */\nLottieDirective.ɵfac = function LottieDirective_Factory(t) {\n  return new (t || LottieDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef, 2), i0.ɵɵdirectiveInject(AnimationLoader));\n};\n/** @nocollapse */\nLottieDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LottieDirective,\n  selectors: [[\"\", \"lottie\", \"\"]],\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lottie]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Self\n      }]\n    }, {\n      type: AnimationLoader\n    }];\n  }, null);\n})();\nclass LottieComponent extends BaseDirective {\n  constructor(ngZone, platformId, animationLoader) {\n    super(ngZone, platformId, animationLoader);\n    this.width = null;\n    this.height = null;\n    this.container = null;\n  }\n  ngOnChanges(changes) {\n    super.loadAnimation(changes, this.container.nativeElement);\n  }\n}\n/** @nocollapse */\nLottieComponent.ɵfac = function LottieComponent_Factory(t) {\n  return new (t || LottieComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(AnimationLoader));\n};\n/** @nocollapse */\nLottieComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LottieComponent,\n  selectors: [[\"ng-lottie\"]],\n  viewQuery: function LottieComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n    }\n  },\n  inputs: {\n    width: \"width\",\n    height: \"height\"\n  },\n  standalone: true,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"]],\n  template: function LottieComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width || \"100%\")(\"height\", ctx.height || \"100%\");\n      i0.ɵɵproperty(\"ngStyle\", ctx.styles)(\"ngClass\", ctx.containerClass);\n    }\n  },\n  dependencies: [CommonModule, i2.NgClass, i2.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-lottie',\n      template: `\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [CommonModule]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: AnimationLoader\n    }];\n  }, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        static: true\n      }]\n    }]\n  });\n})();\nclass LottieModule {\n  static forRoot(options) {\n    return {\n      ngModule: LottieModule,\n      providers: [{\n        provide: LOTTIE_OPTIONS,\n        useValue: options\n      }]\n    };\n  }\n}\n/** @nocollapse */\nLottieModule.ɵfac = function LottieModule_Factory(t) {\n  return new (t || LottieModule)();\n};\n/** @nocollapse */\nLottieModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LottieModule\n});\n/** @nocollapse */\nLottieModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [LottieComponent]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieModule, [{\n    type: NgModule,\n    args: [{\n      imports: [LottieDirective, LottieComponent],\n      exports: [LottieDirective, LottieComponent]\n    }]\n  }], null, null);\n})();\nclass CacheableAnimationLoader extends AnimationLoader {\n  constructor() {\n    super(...arguments);\n    this.cache = new Map();\n  }\n  ngOnDestroy() {\n    this.cache.clear();\n  }\n  loadAnimation(options) {\n    return this.player$.pipe(map(player => {\n      const animationItem = this.createAnimationItem(player, this.transformOptions(options));\n      this.awaitConfigAndCache(options, animationItem);\n      return animationItem;\n    }));\n  }\n  awaitConfigAndCache(options, animationItem) {\n    if (this.isAnimationConfigWithPath(options)) {\n      // Don't wait for the `config_ready` event if it has been cached previously.\n      if (this.cache.has(options.path)) {\n        return;\n      }\n      animationItem.addEventListener('config_ready', () => {\n        // See the comments below on why we're storing the animation data as a string.\n        this.cache.set(options.path, JSON.stringify(animationItem['animationData']));\n      });\n    }\n  }\n  transformOptions(options) {\n    if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {\n      return {\n        ...options,\n        path: undefined,\n        // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we\n        // have to retrieve a new object each time an animation is created.\n        // https://github.com/airbnb/lottie-web#html\n        // See comments for the `animationData` property.\n        animationData: JSON.parse(this.cache.get(options.path))\n      };\n    } else {\n      return options;\n    }\n  }\n  isAnimationConfigWithPath(options) {\n    return typeof options.path === 'string';\n  }\n}\n/** @nocollapse */\nCacheableAnimationLoader.ɵfac = /* @__PURE__ */function () {\n  let ɵCacheableAnimationLoader_BaseFactory;\n  return function CacheableAnimationLoader_Factory(t) {\n    return (ɵCacheableAnimationLoader_BaseFactory || (ɵCacheableAnimationLoader_BaseFactory = i0.ɵɵgetInheritedFactory(CacheableAnimationLoader)))(t || CacheableAnimationLoader);\n  };\n}();\n/** @nocollapse */\nCacheableAnimationLoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CacheableAnimationLoader,\n  factory: CacheableAnimationLoader.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CacheableAnimationLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass LottieCacheModule {\n  static forRoot() {\n    return {\n      ngModule: LottieCacheModule,\n      providers: [{\n        provide: AnimationLoader,\n        useExisting: CacheableAnimationLoader\n      }]\n    };\n  }\n}\n/** @nocollapse */\nLottieCacheModule.ɵfac = function LottieCacheModule_Factory(t) {\n  return new (t || LottieCacheModule)();\n};\n/** @nocollapse */\nLottieCacheModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LottieCacheModule\n});\n/** @nocollapse */\nLottieCacheModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieCacheModule, [{\n    type: NgModule\n  }], null, null);\n})();\nfunction provideCacheableAnimationLoader() {\n  return [{\n    provide: AnimationLoader,\n    useExisting: CacheableAnimationLoader\n  }];\n}\nfunction provideLottieOptions(options) {\n  return [{\n    provide: LOTTIE_OPTIONS,\n    useValue: options\n  }];\n}\nfunction transformAnimationFilenameToKey(animation) {\n  const [animationName] = animation.split('.json');\n  return `animation-${animationName}`;\n}\nclass LottieTransferState {\n  constructor(transferState) {\n    this.transferState = transferState;\n  }\n  get(animation) {\n    const animationKey = transformAnimationFilenameToKey(animation);\n    const stateKey = makeStateKey(animationKey);\n    return this.transferState.get(stateKey, null);\n  }\n}\n/** @nocollapse */\nLottieTransferState.ɵfac = function LottieTransferState_Factory(t) {\n  return new (t || LottieTransferState)(i0.ɵɵinject(i1.TransferState));\n};\n/** @nocollapse */\nLottieTransferState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LottieTransferState,\n  factory: LottieTransferState.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieTransferState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.TransferState\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationLoader, BaseDirective, LottieCacheModule, LottieComponent, LottieDirective, LottieModule, LottieTransferState, provideCacheableAnimationLoader, provideLottieOptions, transformAnimationFilenameToKey, CacheableAnimationLoader as ɵCacheableAnimationLoader, LOTTIE_OPTIONS as ɵLOTTIE_OPTIONS };\n//# sourceMappingURL=ngx-lottie.mjs.map","map":{"version":3,"names":["i0","InjectionToken","Injectable","Inject","PLATFORM_ID","Directive","Input","Output","Self","Component","ChangeDetectionStrategy","ViewChild","NgModule","i2","isPlatformBrowser","CommonModule","from","of","animationFrameScheduler","Subject","BehaviorSubject","defer","Observable","map","tap","shareReplay","observeOn","filter","switchMap","takeUntil","i1","makeStateKey","LOTTIE_OPTIONS","convertPlayerOrLoaderToObservable","player","useWebWorker","playerOrLoader","player$","Promise","pipe","module","default","bufferSize","refCount","AnimationLoader","constructor","ngZone","options","loadAnimation","createAnimationItem","resolveOptions","container","Object","assign","renderer","loop","autoplay","runOutsideAngular","ɵfac","NgZone","ɵprov","type","args","providedIn","undefined","decorators","BaseDirective","platformId","animationLoader","containerClass","styles","animationCreated","getAnimationItem","complete","awaitAnimationItemAndStartListening","loopComplete","enterFrame","segmentStart","configReady","dataReady","domLoaded","destroy","error","destroy$","loadAnimation$","animationItem$","setupLoadAnimationListener","ngOnDestroy","next","destroyAnimation","changes","animationItem","name","observer","addEventListener","event","currentValue","subscribe","run","getValue","ɵdir","selector","LottieDirective","host","ngOnChanges","nativeElement","ElementRef","standalone","LottieComponent","width","height","ɵcmp","NgClass","NgStyle","template","changeDetection","OnPush","imports","static","LottieModule","forRoot","ngModule","providers","provide","useValue","ɵmod","ɵinj","exports","CacheableAnimationLoader","arguments","cache","Map","clear","transformOptions","awaitConfigAndCache","isAnimationConfigWithPath","has","path","set","JSON","stringify","animationData","parse","get","LottieCacheModule","useExisting","provideCacheableAnimationLoader","provideLottieOptions","transformAnimationFilenameToKey","animation","animationName","split","LottieTransferState","transferState","animationKey","stateKey","TransferState","ɵCacheableAnimationLoader","ɵLOTTIE_OPTIONS"],"sources":["/Users/programadorweb/Documents/Digital Thinkers/web-pacto/node_modules/ngx-lottie/fesm2020/ngx-lottie.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Directive, Input, Output, Self, Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { from, of, animationFrameScheduler, Subject, BehaviorSubject, defer, Observable } from 'rxjs';\nimport { map, tap, shareReplay, observeOn, filter, switchMap, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\nimport { makeStateKey } from '@angular/platform-browser';\n\nconst LOTTIE_OPTIONS = new InjectionToken('LottieOptions');\n\nfunction convertPlayerOrLoaderToObservable(player, useWebWorker) {\n    const playerOrLoader = player();\n    const player$ = playerOrLoader instanceof Promise\n        ? from(playerOrLoader).pipe(map(module => module.default || module))\n        : of(playerOrLoader);\n    return player$.pipe(tap(player => player.useWebWorker(useWebWorker)), shareReplay({ bufferSize: 1, refCount: true }));\n}\nclass AnimationLoader {\n    constructor(ngZone, options) {\n        this.ngZone = ngZone;\n        this.options = options;\n        this.player$ = convertPlayerOrLoaderToObservable(this.options.player, this.options.useWebWorker).pipe(observeOn(animationFrameScheduler));\n    }\n    loadAnimation(options) {\n        return this.player$.pipe(map(player => this.createAnimationItem(player, options)));\n    }\n    resolveOptions(options, container) {\n        return Object.assign({\n            container,\n            renderer: 'svg',\n            loop: true,\n            autoplay: true,\n        }, options);\n    }\n    createAnimationItem(player, options) {\n        return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));\n    }\n}\n/** @nocollapse */ AnimationLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: AnimationLoader, deps: [{ token: i0.NgZone }, { token: LOTTIE_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ AnimationLoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: AnimationLoader, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: AnimationLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOTTIE_OPTIONS]\n                }] }]; } });\n\nclass BaseDirective {\n    constructor(ngZone, platformId, animationLoader) {\n        this.ngZone = ngZone;\n        this.platformId = platformId;\n        this.animationLoader = animationLoader;\n        this.options = null;\n        this.containerClass = null;\n        this.styles = null;\n        /**\n         * `animationCreated` is dispatched after calling `loadAnimation`.\n         */\n        this.animationCreated = this.getAnimationItem();\n        /**\n         * `complete` is dispatched after completing the last frame.\n         */\n        this.complete = this.awaitAnimationItemAndStartListening('complete');\n        /**\n         * `loopComplete` is dispatched after completing the frame loop.\n         */\n        this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');\n        /**\n         * `enterFrame` is dispatched after entering the new frame.\n         */\n        this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');\n        /**\n         * `segmentStart` is dispatched when the new segment is adjusted.\n         */\n        this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');\n        /**\n         * Original event name is `config_ready`. `config_ready` is dispatched\n         * after the needed renderer is configured.\n         */\n        this.configReady = this.awaitAnimationItemAndStartListening('config_ready');\n        /**\n         * Original event name is `data_ready`. `data_ready` is dispatched\n         * when all parts of the animation have been loaded.\n         */\n        this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');\n        /**\n         * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n         * when elements have been added to the DOM.\n         */\n        this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');\n        /**\n         * `destroy` will be dispatched when the component gets destroyed,\n         * it's handy for releasing resources.\n         */\n        this.destroy = this.awaitAnimationItemAndStartListening('destroy');\n        /**\n         * `error` will be dispatched if the Lottie player could not render\n         * some frame or parse config.\n         */\n        this.error = this.awaitAnimationItemAndStartListening('error');\n        this.destroy$ = new Subject();\n        this.loadAnimation$ = new Subject();\n        this.animationItem$ = new BehaviorSubject(null);\n        this.setupLoadAnimationListener();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroyAnimation();\n    }\n    loadAnimation(changes, container) {\n        // The `loadAnimation` may load `lottie-web` asynchronously and also pipes the player\n        // with `animationFrameScheduler`, which schedules an animation task and triggers change\n        // detection. We'll trigger change detection only once when the animation item is created.\n        this.ngZone.runOutsideAngular(() => this.loadAnimation$.next([changes, container]));\n    }\n    getAnimationItem() {\n        return defer(() => this.animationItem$).pipe(filter((animationItem) => animationItem !== null));\n    }\n    awaitAnimationItemAndStartListening(name) {\n        return this.getAnimationItem().pipe(switchMap(animationItem => \n        // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.\n        // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from\n        // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`\n        // removes event listeners when calling `destroy()`.\n        new Observable(observer => {\n            this.ngZone.runOutsideAngular(() => {\n                animationItem.addEventListener(name, event => {\n                    this.ngZone.runOutsideAngular(() => {\n                        observer.next(event);\n                    });\n                });\n            });\n        })));\n    }\n    setupLoadAnimationListener() {\n        const loadAnimation$ = this.loadAnimation$.pipe(filter(([changes]) => isPlatformBrowser(this.platformId) && changes.options !== undefined));\n        loadAnimation$\n            .pipe(switchMap(([changes, container]) => {\n            this.destroyAnimation();\n            return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));\n        }), takeUntil(this.destroy$))\n            .subscribe(animationItem => {\n            this.ngZone.run(() => this.animationItem$.next(animationItem));\n        });\n    }\n    destroyAnimation() {\n        const animationItem = this.animationItem$.getValue();\n        // The `ng-lottie` component or the `lottie` directive can be destroyed\n        // before the `animationItem` is set, thus it will fail with\n        // `Cannot read property 'destroy' of null`.\n        // Potentially it can happen if the directive gets destroyed before change\n        // detection is run.\n        if (animationItem === null) {\n            return;\n        }\n        // `destroy()` will remove all events listeners.\n        animationItem.destroy();\n        this.animationItem$.next(null);\n    }\n}\n/** @nocollapse */ BaseDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BaseDirective, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: AnimationLoader }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ BaseDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: BaseDirective, selector: \"[lottie]\", inputs: { options: \"options\", containerClass: \"containerClass\", styles: \"styles\" }, outputs: { animationCreated: \"animationCreated\", complete: \"complete\", loopComplete: \"loopComplete\", enterFrame: \"enterFrame\", segmentStart: \"segmentStart\", configReady: \"configReady\", dataReady: \"dataReady\", domLoaded: \"domLoaded\", destroy: \"destroy\", error: \"error\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BaseDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[lottie]' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: AnimationLoader }]; }, propDecorators: { options: [{\n                type: Input\n            }], containerClass: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], animationCreated: [{\n                type: Output\n            }], complete: [{\n                type: Output\n            }], loopComplete: [{\n                type: Output\n            }], enterFrame: [{\n                type: Output\n            }], segmentStart: [{\n                type: Output\n            }], configReady: [{\n                type: Output\n            }], dataReady: [{\n                type: Output\n            }], domLoaded: [{\n                type: Output\n            }], destroy: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }] } });\n\nclass LottieDirective extends BaseDirective {\n    constructor(ngZone, platformId, host, animationLoader) {\n        super(ngZone, platformId, animationLoader);\n        this.host = host;\n    }\n    ngOnChanges(changes) {\n        super.loadAnimation(changes, this.host.nativeElement);\n    }\n}\n/** @nocollapse */ LottieDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieDirective, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: i0.ElementRef, self: true }, { token: AnimationLoader }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ LottieDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: LottieDirective, isStandalone: true, selector: \"[lottie]\", usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[lottie]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.ElementRef, decorators: [{\n                    type: Self\n                }] }, { type: AnimationLoader }]; } });\n\nclass LottieComponent extends BaseDirective {\n    constructor(ngZone, platformId, animationLoader) {\n        super(ngZone, platformId, animationLoader);\n        this.width = null;\n        this.height = null;\n        this.container = null;\n    }\n    ngOnChanges(changes) {\n        super.loadAnimation(changes, this.container.nativeElement);\n    }\n}\n/** @nocollapse */ LottieComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieComponent, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: AnimationLoader }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ LottieComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: LottieComponent, isStandalone: true, selector: \"ng-lottie\", inputs: { width: \"width\", height: \"height\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ng-lottie',\n                    template: `\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    standalone: true,\n                    imports: [CommonModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: AnimationLoader }]; }, propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { static: true }]\n            }] } });\n\nclass LottieModule {\n    static forRoot(options) {\n        return {\n            ngModule: LottieModule,\n            providers: [\n                {\n                    provide: LOTTIE_OPTIONS,\n                    useValue: options,\n                },\n            ],\n        };\n    }\n}\n/** @nocollapse */ LottieModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ LottieModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieModule, imports: [LottieDirective, LottieComponent], exports: [LottieDirective, LottieComponent] });\n/** @nocollapse */ LottieModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieModule, imports: [LottieComponent] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [LottieDirective, LottieComponent],\n                    exports: [LottieDirective, LottieComponent],\n                }]\n        }] });\n\nclass CacheableAnimationLoader extends AnimationLoader {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    ngOnDestroy() {\n        this.cache.clear();\n    }\n    loadAnimation(options) {\n        return this.player$.pipe(map(player => {\n            const animationItem = this.createAnimationItem(player, this.transformOptions(options));\n            this.awaitConfigAndCache(options, animationItem);\n            return animationItem;\n        }));\n    }\n    awaitConfigAndCache(options, animationItem) {\n        if (this.isAnimationConfigWithPath(options)) {\n            // Don't wait for the `config_ready` event if it has been cached previously.\n            if (this.cache.has(options.path)) {\n                return;\n            }\n            animationItem.addEventListener('config_ready', () => {\n                // See the comments below on why we're storing the animation data as a string.\n                this.cache.set(options.path, JSON.stringify(animationItem['animationData']));\n            });\n        }\n    }\n    transformOptions(options) {\n        if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {\n            return {\n                ...options,\n                path: undefined,\n                // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we\n                // have to retrieve a new object each time an animation is created.\n                // https://github.com/airbnb/lottie-web#html\n                // See comments for the `animationData` property.\n                animationData: JSON.parse(this.cache.get(options.path)),\n            };\n        }\n        else {\n            return options;\n        }\n    }\n    isAnimationConfigWithPath(options) {\n        return typeof options.path === 'string';\n    }\n}\n/** @nocollapse */ CacheableAnimationLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CacheableAnimationLoader, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ CacheableAnimationLoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CacheableAnimationLoader, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CacheableAnimationLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass LottieCacheModule {\n    static forRoot() {\n        return {\n            ngModule: LottieCacheModule,\n            providers: [\n                {\n                    provide: AnimationLoader,\n                    useExisting: CacheableAnimationLoader,\n                },\n            ],\n        };\n    }\n}\n/** @nocollapse */ LottieCacheModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieCacheModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ LottieCacheModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieCacheModule });\n/** @nocollapse */ LottieCacheModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieCacheModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieCacheModule, decorators: [{\n            type: NgModule\n        }] });\n\nfunction provideCacheableAnimationLoader() {\n    return [\n        {\n            provide: AnimationLoader,\n            useExisting: CacheableAnimationLoader,\n        },\n    ];\n}\nfunction provideLottieOptions(options) {\n    return [\n        {\n            provide: LOTTIE_OPTIONS,\n            useValue: options,\n        },\n    ];\n}\n\nfunction transformAnimationFilenameToKey(animation) {\n    const [animationName] = animation.split('.json');\n    return `animation-${animationName}`;\n}\n\nclass LottieTransferState {\n    constructor(transferState) {\n        this.transferState = transferState;\n    }\n    get(animation) {\n        const animationKey = transformAnimationFilenameToKey(animation);\n        const stateKey = makeStateKey(animationKey);\n        return this.transferState.get(stateKey, null);\n    }\n}\n/** @nocollapse */ LottieTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieTransferState, deps: [{ token: i1.TransferState }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ LottieTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieTransferState, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: LottieTransferState, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.TransferState }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationLoader, BaseDirective, LottieCacheModule, LottieComponent, LottieDirective, LottieModule, LottieTransferState, provideCacheableAnimationLoader, provideLottieOptions, transformAnimationFilenameToKey, CacheableAnimationLoader as ɵCacheableAnimationLoader, LOTTIE_OPTIONS as ɵLOTTIE_OPTIONS };\n//# sourceMappingURL=ngx-lottie.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}