{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContractService {\n  constructor(http) {\n    this.http = http;\n    this.endpoint = '';\n    this.API_URL = environment.urlApi;\n    this.storage = window.localStorage;\n    this.endpoint = `${this.API_URL}/portal/contracts/list`;\n    this.header = {\n      'content-type': 'application/json',\n      'access-token': this.storage.getItem('access-token')\n    };\n  }\n  index(params) {\n    let queries = [];\n    for (const [key, value] of Object.entries(params)) {\n      if (Array.isArray(value)) {\n        value.forEach(el => queries.push(`${key}[]=${el}`));\n      } else {\n        if (value != null) {\n          if (typeof value === 'string' || typeof value === 'number') queries.push(`${key}=${value}`);\n          if (typeof value === 'boolean') queries.push(`${key}=${value ? 1 : 0}`);\n        }\n      }\n    }\n    return this.http.get(`${this.endpoint}?${queries.join('&')}`, {\n      headers: this.header\n    }).pipe(tap(res => {\n      return res;\n    }), catchError(err => {\n      return throwError(err);\n    }));\n  }\n}\nContractService.ɵfac = function ContractService_Factory(t) {\n  return new (t || ContractService)(i0.ɵɵinject(i1.HttpClient));\n};\nContractService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContractService,\n  factory: ContractService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;AACjC,SAASC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;AAEhD,SAASC,WAAW,QAAQ,mCAAmC;;;AAM/D,OAAM,MAAOC,eAAe;EAMxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,aAAQ,GAAW,EAAE;IAGzB,IAAI,CAACC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IACjC,IAAI,CAACC,OAAO,GAAGC,MAAM,CAACC,YAAY;IAElC,IAAI,CAACC,QAAQ,GAAG,GAAG,IAAI,CAACL,OAAO,wBAAwB;IACvD,IAAI,CAACM,MAAM,GAAG;MACV,cAAc,EAAE,kBAAkB;MAClC,cAAc,EAAE,IAAI,CAACJ,OAAO,CAACK,OAAO,CAAC,cAAc;KACtD;EACL;EAGOC,KAAK,CAACC,MAAW;IACpB,IAAIC,OAAO,GAAa,EAAE;IAG1B,KAAI,MAAM,CAAEC,GAAG,EAAEC,KAAK,CAAE,IAAIC,MAAM,CAACC,OAAO,CAACL,MAAM,CAAC,EAAE;MAChD,IAAGM,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;QACrBA,KAAK,CAACK,OAAO,CAACC,EAAE,IAAIR,OAAO,CAACS,IAAI,CAAC,GAAGR,GAAG,MAAMO,EAAE,EAAE,CAAC,CAAC;OACtD,MAAM;QACH,IAAGN,KAAK,IAAI,IAAI,EAAE;UACd,IAAG,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAEF,OAAO,CAACS,IAAI,CAAC,GAAGR,GAAG,IAAIC,KAAK,EAAE,CAAC;UAC1F,IAAG,OAAOA,KAAK,KAAK,SAAS,EAAEF,OAAO,CAACS,IAAI,CAAC,GAAGR,GAAG,IAAIC,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;;;;IAKlF,OAAO,IAAI,CAACb,IAAI,CAACqB,GAAG,CAAC,GAAI,IAAI,CAACf,QAAS,IAAKK,OAAO,CAACW,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE;MAAEC,OAAO,EAAE,IAAI,CAAChB;IAAM,CAAE,CAAC,CAACiB,IAAI,CAC5F7B,GAAG,CAAC8B,GAAG,IAAG;MAAG,OAAOA,GAAG;IAAC,CAAC,CAAC,EAC1B7B,UAAU,CAAC8B,GAAG,IAAG;MAAG,OAAOhC,UAAU,CAACgC,GAAG,CAAC;IAAC,CAAC,CAAC,CAChD;EACL;;AArCS5B,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA6B,SAAf7B,eAAe;EAAA8B,YAFZ;AAAM","names":["throwError","tap","catchError","environment","ContractService","constructor","http","API_URL","urlApi","storage","window","localStorage","endpoint","header","getItem","index","params","queries","key","value","Object","entries","Array","isArray","forEach","el","push","get","join","headers","pipe","res","err","factory","providedIn"],"sourceRoot":"","sources":["/Users/programadorweb/Documents/Digital Thinkers/web-pacto/src/app/services/contract/contract.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ContractService {\n    private API_URL: string;\n    private storage: Storage;\n    private header: any;\n    private endpoint: string = '';\n\n    constructor(private http: HttpClient) {\n        this.API_URL = environment.urlApi;\n        this.storage = window.localStorage;\n\n        this.endpoint = `${this.API_URL}/portal/contracts/list`;\n        this.header = {\n            'content-type': 'application/json',\n            'access-token': this.storage.getItem('access-token'),\n        };\n    }\n\n\n    public index(params: any) {\n        let queries: string[] = [];\n\n\n        for(const [ key, value ] of Object.entries(params)) {\n            if(Array.isArray(value)) {\n                value.forEach(el => queries.push(`${key}[]=${el}`));\n            } else {\n                if(value != null) {\n                    if(typeof value === 'string' || typeof value === 'number') queries.push(`${key}=${value}`);\n                    if(typeof value === 'boolean') queries.push(`${key}=${value ? 1 : 0}`);\n                }\n            }\n        }\n\n        return this.http.get(`${ this.endpoint }?${ queries.join('&') }`, { headers: this.header }).pipe(\n            tap(res => { return res }),\n            catchError(err => { return throwError(err) })\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}