// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$angular-base-primary: mat.define-palette(mat.$indigo-palette);
$angular-base-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);


// The warn palette is optional (defaults to red).
$angular-base-warn: mat.define-palette(mat.$red-palette);


// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$angular-base-theme: mat.define-light-theme((
    color: (
        primary: $angular-base-primary,
        accent: $angular-base-accent,
        warn: $angular-base-warn,
    )
));


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($angular-base-theme);


// Define a custom typography config that overrides the font-family as well as the
// `headlines` and `body-1` levels.

/*
$custom-typography: mat.define-typography-config(
  $font-family: $font-regular,
  $headline: mat.define-typography-level(32px, 48px, 700),
  $body-1: mat.define-typography-level(16px, 24px, 500)
);
*/

// Override the typography in the core CSS.
//@include mat.core($custom-typography);


// Custom colors
// @include custom-mat-color($colors);
